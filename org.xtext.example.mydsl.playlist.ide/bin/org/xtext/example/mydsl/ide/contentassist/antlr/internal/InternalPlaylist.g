/*
 * generated by Xtext 2.10.0
 */
grammar InternalPlaylist;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.PlaylistGrammarAccess;

}
@parser::members {
	private PlaylistGrammarAccess grammarAccess;

	public void setGrammarAccess(PlaylistGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePlaylistGeneratorModel
entryRulePlaylistGeneratorModel
:
{ before(grammarAccess.getPlaylistGeneratorModelRule()); }
	 rulePlaylistGeneratorModel
{ after(grammarAccess.getPlaylistGeneratorModelRule()); } 
	 EOF 
;

// Rule PlaylistGeneratorModel
rulePlaylistGeneratorModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlaylistGeneratorModelAccess().getGroup()); }
		(rule__PlaylistGeneratorModel__Group__0)
		{ after(grammarAccess.getPlaylistGeneratorModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMediafile
entryRuleMediafile
:
{ before(grammarAccess.getMediafileRule()); }
	 ruleMediafile
{ after(grammarAccess.getMediafileRule()); } 
	 EOF 
;

// Rule Mediafile
ruleMediafile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMediafileAccess().getGroup()); }
		(rule__Mediafile__Group__0)
		{ after(grammarAccess.getMediafileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaylistGeneratorModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlaylistGeneratorModel__Group__0__Impl
	rule__PlaylistGeneratorModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaylistGeneratorModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaylistGeneratorModelAccess().getPlaylistGeneratorModelAction_0()); }
	()
	{ after(grammarAccess.getPlaylistGeneratorModelAccess().getPlaylistGeneratorModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaylistGeneratorModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlaylistGeneratorModel__Group__1__Impl
	rule__PlaylistGeneratorModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaylistGeneratorModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaylistGeneratorModelAccess().getPlaylistKeyword_1()); }
	'Playlist'
	{ after(grammarAccess.getPlaylistGeneratorModelAccess().getPlaylistKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaylistGeneratorModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlaylistGeneratorModel__Group__2__Impl
	rule__PlaylistGeneratorModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaylistGeneratorModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaylistGeneratorModelAccess().getLEFT_BRACKETTerminalRuleCall_2()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getPlaylistGeneratorModelAccess().getLEFT_BRACKETTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaylistGeneratorModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlaylistGeneratorModel__Group__3__Impl
	rule__PlaylistGeneratorModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaylistGeneratorModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPlaylistGeneratorModelAccess().getMediafilesAssignment_3()); }
		(rule__PlaylistGeneratorModel__MediafilesAssignment_3)
		{ after(grammarAccess.getPlaylistGeneratorModelAccess().getMediafilesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getPlaylistGeneratorModelAccess().getMediafilesAssignment_3()); }
		(rule__PlaylistGeneratorModel__MediafilesAssignment_3)*
		{ after(grammarAccess.getPlaylistGeneratorModelAccess().getMediafilesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaylistGeneratorModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlaylistGeneratorModel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlaylistGeneratorModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlaylistGeneratorModelAccess().getRIGHT_BRACKETTerminalRuleCall_4()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getPlaylistGeneratorModelAccess().getRIGHT_BRACKETTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mediafile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mediafile__Group__0__Impl
	rule__Mediafile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediafileAccess().getMediafileKeyword_0()); }
	'mediafile'
	{ after(grammarAccess.getMediafileAccess().getMediafileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mediafile__Group__1__Impl
	rule__Mediafile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediafileAccess().getLEFT_BRACKETTerminalRuleCall_1()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getMediafileAccess().getLEFT_BRACKETTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mediafile__Group__2__Impl
	rule__Mediafile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediafileAccess().getIdKeyword_2()); }
	'id:'
	{ after(grammarAccess.getMediafileAccess().getIdKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mediafile__Group__3__Impl
	rule__Mediafile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediafileAccess().getIdAssignment_3()); }
	(rule__Mediafile__IdAssignment_3)
	{ after(grammarAccess.getMediafileAccess().getIdAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mediafile__Group__4__Impl
	rule__Mediafile__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediafileAccess().getPathKeyword_4()); }
	'path:'
	{ after(grammarAccess.getMediafileAccess().getPathKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mediafile__Group__5__Impl
	rule__Mediafile__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediafileAccess().getLocationAssignment_5()); }
	(rule__Mediafile__LocationAssignment_5)
	{ after(grammarAccess.getMediafileAccess().getLocationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mediafile__Group__6__Impl
	rule__Mediafile__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediafileAccess().getDurationKeyword_6()); }
	'duration:'
	{ after(grammarAccess.getMediafileAccess().getDurationKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mediafile__Group__7__Impl
	rule__Mediafile__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediafileAccess().getDurationAssignment_7()); }
	(rule__Mediafile__DurationAssignment_7)
	{ after(grammarAccess.getMediafileAccess().getDurationAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mediafile__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediafileAccess().getRIGHT_BRACKETTerminalRuleCall_8()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getMediafileAccess().getRIGHT_BRACKETTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlaylistGeneratorModel__MediafilesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlaylistGeneratorModelAccess().getMediafilesMediafileParserRuleCall_3_0()); }
		ruleMediafile
		{ after(grammarAccess.getPlaylistGeneratorModelAccess().getMediafilesMediafileParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__IdAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMediafileAccess().getIdSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getMediafileAccess().getIdSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__LocationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMediafileAccess().getLocationSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getMediafileAccess().getLocationSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mediafile__DurationAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMediafileAccess().getDurationFLOATTerminalRuleCall_7_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getMediafileAccess().getDurationFLOATTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_FLOAT : RULE_INT '.' RULE_INT;

RULE_LEFT_BRACKET : '{';

RULE_RIGHT_BRACKET : '}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
