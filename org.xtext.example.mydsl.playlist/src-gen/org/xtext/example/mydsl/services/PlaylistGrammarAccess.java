/*
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PlaylistGrammarAccess extends AbstractGrammarElementFinder {
	
	public class PlaylistGeneratorModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Playlist.PlaylistGeneratorModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPlaylistGeneratorModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPlaylistKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cLEFT_BRACKETTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cMediafilesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMediafilesMediafileParserRuleCall_3_0 = (RuleCall)cMediafilesAssignment_3.eContents().get(0);
		private final RuleCall cRIGHT_BRACKETTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//PlaylistGeneratorModel:
		//	{PlaylistGeneratorModel}
		//	'Playlist' LEFT_BRACKET
		//	mediafiles+=Mediafile+
		//	RIGHT_BRACKET;
		@Override public ParserRule getRule() { return rule; }
		
		//{PlaylistGeneratorModel} 'Playlist' LEFT_BRACKET mediafiles+=Mediafile+ RIGHT_BRACKET
		public Group getGroup() { return cGroup; }
		
		//{PlaylistGeneratorModel}
		public Action getPlaylistGeneratorModelAction_0() { return cPlaylistGeneratorModelAction_0; }
		
		//'Playlist'
		public Keyword getPlaylistKeyword_1() { return cPlaylistKeyword_1; }
		
		//LEFT_BRACKET
		public RuleCall getLEFT_BRACKETTerminalRuleCall_2() { return cLEFT_BRACKETTerminalRuleCall_2; }
		
		//mediafiles+=Mediafile+
		public Assignment getMediafilesAssignment_3() { return cMediafilesAssignment_3; }
		
		//Mediafile
		public RuleCall getMediafilesMediafileParserRuleCall_3_0() { return cMediafilesMediafileParserRuleCall_3_0; }
		
		//RIGHT_BRACKET
		public RuleCall getRIGHT_BRACKETTerminalRuleCall_4() { return cRIGHT_BRACKETTerminalRuleCall_4; }
	}
	public class MediafileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Playlist.Mediafile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMediafileKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cLEFT_BRACKETTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdSTRINGTerminalRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Keyword cPathKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLocationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLocationSTRINGTerminalRuleCall_5_0 = (RuleCall)cLocationAssignment_5.eContents().get(0);
		private final Keyword cDurationKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDurationAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDurationFLOATTerminalRuleCall_7_0 = (RuleCall)cDurationAssignment_7.eContents().get(0);
		private final RuleCall cRIGHT_BRACKETTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//Mediafile:
		//	'mediafile'
		//	LEFT_BRACKET
		//	'id:' id=STRING
		//	'path:' location=STRING
		//	'duration:' duration=FLOAT
		//	RIGHT_BRACKET;
		@Override public ParserRule getRule() { return rule; }
		
		//'mediafile' LEFT_BRACKET 'id:' id=STRING 'path:' location=STRING 'duration:' duration=FLOAT RIGHT_BRACKET
		public Group getGroup() { return cGroup; }
		
		//'mediafile'
		public Keyword getMediafileKeyword_0() { return cMediafileKeyword_0; }
		
		//LEFT_BRACKET
		public RuleCall getLEFT_BRACKETTerminalRuleCall_1() { return cLEFT_BRACKETTerminalRuleCall_1; }
		
		//'id:'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//id=STRING
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_3_0() { return cIdSTRINGTerminalRuleCall_3_0; }
		
		//'path:'
		public Keyword getPathKeyword_4() { return cPathKeyword_4; }
		
		//location=STRING
		public Assignment getLocationAssignment_5() { return cLocationAssignment_5; }
		
		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_5_0() { return cLocationSTRINGTerminalRuleCall_5_0; }
		
		//'duration:'
		public Keyword getDurationKeyword_6() { return cDurationKeyword_6; }
		
		//duration=FLOAT
		public Assignment getDurationAssignment_7() { return cDurationAssignment_7; }
		
		//FLOAT
		public RuleCall getDurationFLOATTerminalRuleCall_7_0() { return cDurationFLOATTerminalRuleCall_7_0; }
		
		//RIGHT_BRACKET
		public RuleCall getRIGHT_BRACKETTerminalRuleCall_8() { return cRIGHT_BRACKETTerminalRuleCall_8; }
	}
	
	
	private final PlaylistGeneratorModelElements pPlaylistGeneratorModel;
	private final MediafileElements pMediafile;
	private final TerminalRule tFLOAT;
	private final TerminalRule tLEFT_BRACKET;
	private final TerminalRule tRIGHT_BRACKET;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PlaylistGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPlaylistGeneratorModel = new PlaylistGeneratorModelElements();
		this.pMediafile = new MediafileElements();
		this.tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Playlist.FLOAT");
		this.tLEFT_BRACKET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Playlist.LEFT_BRACKET");
		this.tRIGHT_BRACKET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Playlist.RIGHT_BRACKET");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.Playlist".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//PlaylistGeneratorModel:
	//	{PlaylistGeneratorModel}
	//	'Playlist' LEFT_BRACKET
	//	mediafiles+=Mediafile+
	//	RIGHT_BRACKET;
	public PlaylistGeneratorModelElements getPlaylistGeneratorModelAccess() {
		return pPlaylistGeneratorModel;
	}
	
	public ParserRule getPlaylistGeneratorModelRule() {
		return getPlaylistGeneratorModelAccess().getRule();
	}
	
	//Mediafile:
	//	'mediafile'
	//	LEFT_BRACKET
	//	'id:' id=STRING
	//	'path:' location=STRING
	//	'duration:' duration=FLOAT
	//	RIGHT_BRACKET;
	public MediafileElements getMediafileAccess() {
		return pMediafile;
	}
	
	public ParserRule getMediafileRule() {
		return getMediafileAccess().getRule();
	}
	
	//terminal FLOAT returns ecore::EFloat:
	//	INT '.' INT;
	public TerminalRule getFLOATRule() {
		return tFLOAT;
	}
	
	//terminal LEFT_BRACKET:
	//	'{';
	public TerminalRule getLEFT_BRACKETRule() {
		return tLEFT_BRACKET;
	}
	
	//terminal RIGHT_BRACKET:
	//	'}';
	public TerminalRule getRIGHT_BRACKETRule() {
		return tRIGHT_BRACKET;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
